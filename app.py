import sys
import pysqlite3
sys.modules["sqlite3"] = pysqlite3

import os
import streamlit as st
from rag_assistant.main import get_or_create_vectorstore, list_documents, create_qa_chain
from rag_assistant import config
import logging

logging.basicConfig(level=logging.INFO)

# Streamlit config
st.set_page_config(
    page_title="–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –°–ù –†–ö",
    layout="wide"
)

st.title("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–º –Ω–æ—Ä–º–∞–º –†–ö")

def main():
    # ‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñÑ‚ñë‚ñÄ‚ñà‚ñÄ‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñë‚ñë‚ñë‚ñà‚ñë‚ñà
    # ‚ñë‚ñà‚ñÑ‚ñà‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñë‚ñà‚ñë‚ñë‚ñà‚ñë‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñë‚ñë‚ñë‚ñà‚ñë‚ñà
    # ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñë‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ

    with st.sidebar:
        st.header("üì§ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ PDF")
        uploaded_files = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ PDF-—Ñ–∞–π–ª—ã", type="pdf", accept_multiple_files=True)
        if uploaded_files:
            for file in uploaded_files:
                path = os.path.join(config.PDF_DIR, file.name)
                with open(path, "wb") as f:
                    f.write(file.getbuffer())
            st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(uploaded_files)} –Ω–æ–≤—ã—Ö PDF-—Ñ–∞–π–ª–æ–≤. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–∑—ã.")

    with st.spinner("üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã..."):
        try:
            vectordb = get_or_create_vectorstore(force_rebuild=False)
            all_documents = list_documents(vectordb)

            if not all_documents:
                st.error("‚ùå –í –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑–µ –Ω–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!")
                st.write(f"–ü—Ä–æ–≤–µ—Ä—å –ø–∞–ø–∫—É: `{config.PDF_DIR}` –∏ –ª–æ–≥–∏ –∑–∞–ø—É—Å–∫–∞.")
                return

            st.session_state["vectordb"] = vectordb
            st.session_state["all_documents"] = all_documents

            st.success(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(all_documents)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.")
        except Exception as e:
            st.error(f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±–∞–∑—ã: {str(e)}")
            return

    # ‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñÄ‚ñà‚ñë‚ñÄ‚ñà‚ñÄ‚ñë‚ñà‚ñÄ‚ñÄ
    # ‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñë‚ñà‚ñÄ‚ñÄ‚ñë‚ñà‚ñë‚ñà‚ñë‚ñë‚ñà‚ñë‚ñë‚ñà‚ñÄ‚ñÄ
    # ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñë‚ñÄ‚ñë‚ñÄ‚ñë‚ñë‚ñÄ‚ñë‚ñë‚ñÄ‚ñÄ‚ñÄ

    with st.sidebar:
        st.header("üìë –î–æ–∫—É–º–µ–Ω—Ç—ã:")
        for doc_name in st.session_state["all_documents"]:
            st.write(f"‚Ä¢ {doc_name}")

    selected = st.selectbox(
        "üîç –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤–æ–ø—Ä–æ—Å –æ–¥–Ω–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–º (–ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é):",
        options=["–í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã"] + st.session_state["all_documents"],
        index=0,
    )

    question = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:")

    if question.strip():
        with st.spinner("üîé –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..."):
            try:
                qa_chain = create_qa_chain(
                    vectordb=st.session_state["vectordb"],
                    selected_document=selected if selected != "–í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã" else None
                )
                result = qa_chain({"query": question})
                answer = result.get("result", "")

                if "–Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏" in answer.lower():
                    st.warning("ü§î –¢–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –í–æ—Ç —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã:")
                    for doc in result.get("source_documents", []):
                        st.write(f"üìÑ {doc.metadata['source']}, —Å—Ç—Ä. {doc.metadata['page']}:")
                        st.text(doc.page_content[:500] + "...")
                else:
                    st.markdown("### üß† –û—Ç–≤–µ—Ç:")
                    st.write(answer)

            except Exception as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")

if __name__ == "__main__":
    main()