import os
import streamlit as st
from langchain_openai import OpenAIEmbeddings, ChatOpenAI
from langchain_chroma import Chroma
from langchain.chains import RetrievalQA
from rag_assistant.main import get_or_create_vectorstore, list_documents, create_qa_chain
from rag_assistant import config

# –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –ü–ï–†–í–´–ú –≤—ã–∑–æ–≤–æ–º –≤ —Å–∫—Ä–∏–ø—Ç–µ
st.set_page_config(
    page_title="–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–º PDF –°–ù –†–ö",
    layout="wide"
)

st.title("–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–º –Ω–æ—Ä–º–∞–º –†–ö")

def main():
    # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã
    with st.spinner("üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã..."):
        try:
            vectordb = get_or_create_vectorstore()
            all_documents = list_documents(vectordb)
            
            if not all_documents:
                st.error("‚ö†Ô∏è –í –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑–µ –Ω–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
                st.write(f"- –ü–∞–ø–∫—É —Å PDF: {config.PDF_DIR}")
                st.write("- –õ–æ–≥–∏ –∑–∞–≥—Ä—É–∑–∫–∏ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ)")
                return
            
            st.session_state['vectordb'] = vectordb
            st.session_state['all_documents'] = all_documents
            
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {str(e)}")
            return

    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å: —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    with st.sidebar:
        st.header("üìë –í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:")
        st.write(f"–ù–∞–π–¥–µ–Ω–æ: {len(st.session_state['all_documents'])} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.")
        for name in st.session_state['all_documents']:
            st.write(f"‚Ä¢ {name}")

    # –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    selected = st.selectbox(
        "üîç –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤–æ–ø—Ä–æ—Å –æ–¥–Ω–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–æ–º (–ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é):",
        options=["–í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã"] + st.session_state['all_documents'],
        index=0,
    )

    question = st.text_input("–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:")

    if question:
        with st.spinner("üîé –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..."):
            try:
                # –°–æ–∑–¥–∞–µ–º —Ü–µ–ø–æ—á–∫—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
                qa_chain = create_qa_chain(st.session_state['vectordb'])
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
                result = qa_chain({"query": question})
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
                answer = result.get("result", "")
                if "–Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏" in answer.lower():
                    st.warning("–í –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, –Ω–æ –µ—Å—Ç—å –ø–æ—Ö–æ–∂–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
                    # –í—ã–≤–æ–¥–∏–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
                    for doc in result.get("source_documents", []):
                        st.write(f"üìÑ {doc.metadata['source']}, —Å—Ç—Ä. {doc.metadata['page']}:")
                        st.text(doc.page_content[:500] + "...")
                else:
                    st.markdown("### üß† –û—Ç–≤–µ—Ç:")
                    st.write(answer)
                    
                    # –í—ã–≤–æ–¥ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                    
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}")

if __name__ == "__main__":
    main()